<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[larryhou]]></title>
  <link href="http://larryhou.github.com/atom.xml" rel="self"/>
  <link href="http://larryhou.github.com/"/>
  <updated>2012-11-09T23:46:17+08:00</updated>
  <id>http://larryhou.github.com/</id>
  <author>
    <name><![CDATA[larryhou]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用Excel导出XML格式文件]]></title>
    <link href="http://larryhou.github.com/blog/2012/11/08/export-xml-from-excel/"/>
    <updated>2012-11-08T10:08:00+08:00</updated>
    <id>http://larryhou.github.com/blog/2012/11/08/export-xml-from-excel</id>
    <content type="html"><![CDATA[<p>生成XML的方式有很多：如果你是程序员，那么你可以通过变成快速生成你想要的XML格式；如果你是其他用户，你可能会使用记事本等文本编辑工具来手动写XML。这些都不是问题，但是数据量很大的时候，如果你不是程序猿会不会郁闷？<!--more-->本文介绍了一种方法不借助编程也可以高效、快速地生成XML配置文件。在看这篇文章之前，我先假定了你们都会用微软Office工具Excel，其实不会问题也不是很大:-D</p>

<p>假设现在有个任务，要生成一个班的学生XML配置，这个配置包含学生的学号、姓名、性别、年龄、出生年月信息，那么现在有两种XML格式可以选择：</p>

<figure class='code'><figcaption><span>1.把每个学生做成一个XML节点，相关信息描述到属性字段  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;student</span> <span class="na">id=</span><span class="s">&quot;&quot;</span> <span class="na">name=</span><span class="s">&quot;&quot;</span> <span class="na">sex=</span><span class="s">&quot;&quot;</span> <span class="na">age=</span><span class="s">&quot;&quot;</span> <span class="na">birth=</span><span class="s">&quot;&quot;</span><span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>2.把每个学生的相关信息分别做成一个单独XML节点  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;student&gt;</span>
</span><span class='line'>  <span class="nt">&lt;id&gt;&lt;/id&gt;</span>
</span><span class='line'>  <span class="nt">&lt;name&gt;&lt;/name&gt;</span>
</span><span class='line'>  <span class="nt">&lt;sex&gt;&lt;/sex&gt;</span>
</span><span class='line'>  <span class="nt">&lt;age&gt;&lt;/age&gt;</span>
</span><span class='line'>  <span class="nt">&lt;birth&gt;&lt;/birth&gt;</span>
</span><span class='line'><span class="nt">&lt;/student&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以很容易发现第一种描述更简洁，看起来有点小清新的感觉，我们现在就以第一种格式来介绍生成XML的方法。不过你真的很喜欢第二种方式，看到最后你惊喜地发现，我的方法也可解决你的问题。</p>

<p>现在回归正题，如果用Excel去录入这些数据，大家很可能是这样来做数据，这样做很容易理解，并且容易批量拖拽处理。<img src="http://larryhou.github.com/images/export-xml-from-excel/fig01.png">
到这里我们可以发现，其实Excel可以完全把我们的数据描述清楚，那么如果Excel能把这些数据转成XML岂不是很好？是的，Excel可以做这些，但是Excel不知道你想要的XML格式，所以要给Excel定一个规则让它直到我们想要什么字段、输出什么格式。现在有两种方法给Excel指定输出规则：简单XML映射、SchemaXML映射，下面分别来做介绍。</p>

<h2>简单XML映射</h2>

<p>对于上面的数据我们用下面这段XML来描述，然后保存为rule.xml文件。</p>

<figure class='code'><figcaption><span>简单XML映射规则  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;data&gt;</span>
</span><span class='line'>  <span class="nt">&lt;student</span> <span class="na">id=</span><span class="s">&quot;&quot;</span> <span class="na">name=</span><span class="s">&quot;&quot;</span> <span class="na">sex=</span><span class="s">&quot;&quot;</span> <span class="na">age=</span><span class="s">&quot;&quot;</span> <span class="na">birth=</span><span class="s">&quot;&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;student</span> <span class="na">id=</span><span class="s">&quot;&quot;</span> <span class="na">name=</span><span class="s">&quot;&quot;</span> <span class="na">sex=</span><span class="s">&quot;&quot;</span> <span class="na">age=</span><span class="s">&quot;&quot;</span> <span class="na">birth=</span><span class="s">&quot;&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/data&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>data</code>是输出XML的根节点，<code>student</code>是单个学生信息节点，这两个字段限定了XML输出的节点名称，<code>&lt;student&gt;&lt;/student&gt;</code>数据描述了单条XML节点属性的字段名称。这样整个输出规则就定制好了，是不是非常简单？可能会疑惑为什么有两条重复的<code>student</code>数据，这里我先不透露，大家可以看完这篇文章后自己试试看看什么效果。</p>

<p>接下来我们把这个XML规则导入Excel，进入“<strong>文件</strong>-><strong>选项</strong>-><strong>自定义功能区</strong>”，右边栏里面找到<strong>开发工具</strong>，确保其前面的复选框被勾上，并且确保<strong>XML</strong>前面的复选框也被勾上，如下图</p>

<p><img src="http://larryhou.github.com/images/export-xml-from-excel/fig02.png"></p>

<p>然后返回主界面，在选项卡区域找到<strong>开发工具</strong>，点击<strong>源</strong>按钮，这时Excel会出现一个左边栏，这时导入XML规则的入口操作界面，</p>

<p><img src="http://larryhou.github.com/images/export-xml-from-excel/fig03.png"></p>

<p>点击“<strong>XML 映射&#8230;</strong>-><strong>添加</strong>”，把之前保存的<strong>rule.xml</strong>文件导入进来，这时右边栏会出现一个树形的属性列表，列表字段就是<strong>rule.xml</strong>规则里面定义的字段，这些自动都是可以拖拽的：把<code>id</code>拖拽到<code>学号</code>栏，一次类推，把所有的字段都映射到Excel的数据栏。
<img src="http://larryhou.github.com/images/export-xml-from-excel/fig04.png"></p>

<p>这样就完成了所有的规则定义以及映射工作，接下来就是高潮来临的时刻：<strong>输出XML配置</strong>。这一步非常简单，只需要点击一个按钮“<strong>开发者工具</strong>-><strong>导出</strong>”，然后选择你要输出的文件位置保存即可。</p>

<figure class='code'><figcaption><span>XML导出结果 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;data&gt;</span>
</span><span class='line'>  <span class="nt">&lt;student</span> <span class="na">id=</span><span class="s">&quot;5325035&quot;</span> <span class="na">name=</span><span class="s">&quot;name::01&quot;</span> <span class="na">sex=</span><span class="s">&quot;0&quot;</span> <span class="na">major=</span><span class="s">&quot;21&quot;</span> <span class="na">birth=</span><span class="s">&quot;33349&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;student</span> <span class="na">id=</span><span class="s">&quot;5325036&quot;</span> <span class="na">name=</span><span class="s">&quot;name::02&quot;</span> <span class="na">sex=</span><span class="s">&quot;1&quot;</span> <span class="na">major=</span><span class="s">&quot;22&quot;</span> <span class="na">birth=</span><span class="s">&quot;33208&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;student</span> <span class="na">id=</span><span class="s">&quot;5325037&quot;</span> <span class="na">name=</span><span class="s">&quot;name::03&quot;</span> <span class="na">sex=</span><span class="s">&quot;0&quot;</span> <span class="na">major=</span><span class="s">&quot;20&quot;</span> <span class="na">birth=</span><span class="s">&quot;33744&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;student</span> <span class="na">id=</span><span class="s">&quot;5325038&quot;</span> <span class="na">name=</span><span class="s">&quot;name::04&quot;</span> <span class="na">sex=</span><span class="s">&quot;0&quot;</span> <span class="na">major=</span><span class="s">&quot;20&quot;</span> <span class="na">birth=</span><span class="s">&quot;33914&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;student</span> <span class="na">id=</span><span class="s">&quot;5325039&quot;</span> <span class="na">name=</span><span class="s">&quot;name::05&quot;</span> <span class="na">sex=</span><span class="s">&quot;0&quot;</span> <span class="na">major=</span><span class="s">&quot;21&quot;</span> <span class="na">birth=</span><span class="s">&quot;33398&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;student</span> <span class="na">id=</span><span class="s">&quot;5325040&quot;</span> <span class="na">name=</span><span class="s">&quot;name::06&quot;</span> <span class="na">sex=</span><span class="s">&quot;1&quot;</span> <span class="na">major=</span><span class="s">&quot;21&quot;</span> <span class="na">birth=</span><span class="s">&quot;33403&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;student</span> <span class="na">id=</span><span class="s">&quot;5325041&quot;</span> <span class="na">name=</span><span class="s">&quot;name::07&quot;</span> <span class="na">sex=</span><span class="s">&quot;1&quot;</span> <span class="na">major=</span><span class="s">&quot;21&quot;</span> <span class="na">birth=</span><span class="s">&quot;33366&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;student</span> <span class="na">id=</span><span class="s">&quot;5325042&quot;</span> <span class="na">name=</span><span class="s">&quot;name::08&quot;</span> <span class="na">sex=</span><span class="s">&quot;0&quot;</span> <span class="na">major=</span><span class="s">&quot;23&quot;</span> <span class="na">birth=</span><span class="s">&quot;32712&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;student</span> <span class="na">id=</span><span class="s">&quot;5325043&quot;</span> <span class="na">name=</span><span class="s">&quot;name::09&quot;</span> <span class="na">sex=</span><span class="s">&quot;1&quot;</span> <span class="na">major=</span><span class="s">&quot;21&quot;</span> <span class="na">birth=</span><span class="s">&quot;33536&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;student</span> <span class="na">id=</span><span class="s">&quot;5325044&quot;</span> <span class="na">name=</span><span class="s">&quot;name::10&quot;</span> <span class="na">sex=</span><span class="s">&quot;1&quot;</span> <span class="na">major=</span><span class="s">&quot;20&quot;</span> <span class="na">birth=</span><span class="s">&quot;33672&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;student</span> <span class="na">id=</span><span class="s">&quot;5325045&quot;</span> <span class="na">name=</span><span class="s">&quot;name::11&quot;</span> <span class="na">sex=</span><span class="s">&quot;1&quot;</span> <span class="na">major=</span><span class="s">&quot;21&quot;</span> <span class="na">birth=</span><span class="s">&quot;33397&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/data&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>整个操作是不是很简单？结果是不是很完美？！！细心的同学可能发现了出生日期导出的好像有点奇怪，其实不必诧异：这时Excel表示日期的原始数据。但是跟想象的结果好像有点出入，你是否想对输出的格式作进一步的限制？如果是，那么下一个章节是你需要关注的。</p>

<h2>SchemaXML映射</h2>

<p>其实我对Schema XML的了解也不太多，有一点我是可以确认的：<strong>SchemaXML是一个XML内容的规则，它描述了XML有什么样的内容，并限定了XML内容有什么格式；简单说它是一个XML的语法规范</strong>。为什么这样说呢？因为实际上我们为XML定义的没一个字段都是有其含义的，比如<strong>年龄</strong>字段只可能是一个整数，不可能是其他字符串之类的值；而<strong>出生日期</strong>就是一个日期格式，以此类推。这样你就会有点豁然开朗的感觉，是的，SchemaXML可以描述任意XML内容。到这里，我们可以用SchemaXML做Excel导出XML的规则就一点不奇怪了，应该说用它就最合适不过了！SchemaXML其实也是一个XML文件，但是写起来相对有点门槛。如果为上面的数据写一个SchemaXML规则，那么就应该类似下面这样：</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;xs:schema</span> <span class="na">xmlns:xs=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema&quot;</span> <span class="na">elementFormDefault=</span><span class="s">&quot;qualified&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;xs:element</span> <span class="na">name=</span><span class="s">&quot;data&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;xs:complexType&gt;</span>
</span><span class='line'>            <span class="nt">&lt;xs:sequence&gt;</span>
</span><span class='line'>                <span class="nt">&lt;xs:element</span> <span class="na">maxOccurs=</span><span class="s">&quot;unbounded&quot;</span> <span class="na">name=</span><span class="s">&quot;student&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;xs:complexType&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;xs:attribute</span> <span class="na">name=</span><span class="s">&quot;id&quot;</span> <span class="na">type=</span><span class="s">&quot;xs:integer&quot;</span> <span class="na">use=</span><span class="s">&quot;required&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;xs:attribute</span> <span class="na">name=</span><span class="s">&quot;name&quot;</span> <span class="na">type=</span><span class="s">&quot;xs:string&quot;</span> <span class="na">use=</span><span class="s">&quot;required&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;xs:attribute</span> <span class="na">name=</span><span class="s">&quot;sex&quot;</span> <span class="na">type=</span><span class="s">&quot;xs:integer&quot;</span> <span class="na">use=</span><span class="s">&quot;required&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;xs:attribute</span> <span class="na">name=</span><span class="s">&quot;age&quot;</span> <span class="na">type=</span><span class="s">&quot;xs:integer&quot;</span> <span class="na">use=</span><span class="s">&quot;required&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;xs:attribute</span> <span class="na">name=</span><span class="s">&quot;birth&quot;</span> <span class="na">type=</span><span class="s">&quot;xs:date&quot;</span> <span class="na">use=</span><span class="s">&quot;required&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;/xs:complexType&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/xs:element&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/xs:sequence&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/xs:complexType&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/xs:element&gt;</span>
</span><span class='line'><span class="nt">&lt;/xs:schema&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>具体SchemaXML里面的这些字段表示什么意思，这就超出了本文介绍的范围，有兴趣的同学可以Google一些相关资料来学习一下。除了学习资料，也可以使用现成的可视化工具来生成配置，比如OxygenXML、LiquidXML等。下面是Oxygen可视化编辑工具的界面
<img src="http://larryhou.github.com/images/export-xml-from-excel/fig05.png">
这里就不对这些工具做过多的介绍，有兴趣的同学可以下来体验下。</p>

<p>把上面这段SchemaXML规则保存为<strong>rule.xsd</strong>文件，采用导入<strong>rule.xml</strong>的方式导入rule.xsd文件，导入后也会生成类似的树形字段列表，然后拖拽映射到相应的Excel数据列上，点击导出即可。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;data&gt;</span>
</span><span class='line'>  <span class="nt">&lt;student</span> <span class="na">id=</span><span class="s">&quot;5325035&quot;</span> <span class="na">name=</span><span class="s">&quot;name::01&quot;</span> <span class="na">sex=</span><span class="s">&quot;0&quot;</span> <span class="na">age=</span><span class="s">&quot;21&quot;</span> <span class="na">birth=</span><span class="s">&quot;1991-04-21&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;student</span> <span class="na">id=</span><span class="s">&quot;5325036&quot;</span> <span class="na">name=</span><span class="s">&quot;name::02&quot;</span> <span class="na">sex=</span><span class="s">&quot;1&quot;</span> <span class="na">age=</span><span class="s">&quot;22&quot;</span> <span class="na">birth=</span><span class="s">&quot;1990-12-01&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;student</span> <span class="na">id=</span><span class="s">&quot;5325037&quot;</span> <span class="na">name=</span><span class="s">&quot;name::03&quot;</span> <span class="na">sex=</span><span class="s">&quot;0&quot;</span> <span class="na">age=</span><span class="s">&quot;20&quot;</span> <span class="na">birth=</span><span class="s">&quot;1992-05-20&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;student</span> <span class="na">id=</span><span class="s">&quot;5325038&quot;</span> <span class="na">name=</span><span class="s">&quot;name::04&quot;</span> <span class="na">sex=</span><span class="s">&quot;0&quot;</span> <span class="na">age=</span><span class="s">&quot;20&quot;</span> <span class="na">birth=</span><span class="s">&quot;1992-11-06&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;student</span> <span class="na">id=</span><span class="s">&quot;5325039&quot;</span> <span class="na">name=</span><span class="s">&quot;name::05&quot;</span> <span class="na">sex=</span><span class="s">&quot;0&quot;</span> <span class="na">age=</span><span class="s">&quot;21&quot;</span> <span class="na">birth=</span><span class="s">&quot;1991-06-09&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;student</span> <span class="na">id=</span><span class="s">&quot;5325040&quot;</span> <span class="na">name=</span><span class="s">&quot;name::06&quot;</span> <span class="na">sex=</span><span class="s">&quot;1&quot;</span> <span class="na">age=</span><span class="s">&quot;21&quot;</span> <span class="na">birth=</span><span class="s">&quot;1991-06-14&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;student</span> <span class="na">id=</span><span class="s">&quot;5325041&quot;</span> <span class="na">name=</span><span class="s">&quot;name::07&quot;</span> <span class="na">sex=</span><span class="s">&quot;1&quot;</span> <span class="na">age=</span><span class="s">&quot;21&quot;</span> <span class="na">birth=</span><span class="s">&quot;1991-05-08&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;student</span> <span class="na">id=</span><span class="s">&quot;5325042&quot;</span> <span class="na">name=</span><span class="s">&quot;name::08&quot;</span> <span class="na">sex=</span><span class="s">&quot;0&quot;</span> <span class="na">age=</span><span class="s">&quot;23&quot;</span> <span class="na">birth=</span><span class="s">&quot;1989-07-23&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;student</span> <span class="na">id=</span><span class="s">&quot;5325043&quot;</span> <span class="na">name=</span><span class="s">&quot;name::09&quot;</span> <span class="na">sex=</span><span class="s">&quot;1&quot;</span> <span class="na">age=</span><span class="s">&quot;21&quot;</span> <span class="na">birth=</span><span class="s">&quot;1991-10-25&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;student</span> <span class="na">id=</span><span class="s">&quot;5325044&quot;</span> <span class="na">name=</span><span class="s">&quot;name::10&quot;</span> <span class="na">sex=</span><span class="s">&quot;1&quot;</span> <span class="na">age=</span><span class="s">&quot;20&quot;</span> <span class="na">birth=</span><span class="s">&quot;1992-03-09&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;student</span> <span class="na">id=</span><span class="s">&quot;5325045&quot;</span> <span class="na">name=</span><span class="s">&quot;name::11&quot;</span> <span class="na">sex=</span><span class="s">&quot;1&quot;</span> <span class="na">age=</span><span class="s">&quot;21&quot;</span> <span class="na">birth=</span><span class="s">&quot;1991-06-08&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/data&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>这是使用SchemaXML导出的配置结果，在日期字段里面月份、日期如果是一位数字的前面会自动补0占位，看起来非常工整。</p>

<h2>每个字段单独输出XML节点</h2>

<p>这中方式映射与字段输出属性模式是非常类似，区别只是规则定义格式的差别，如果使用简单XML做规则，那么就应该是这样</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;data&gt;</span>
</span><span class='line'>  <span class="nt">&lt;student&gt;</span>
</span><span class='line'>      <span class="nt">&lt;id&gt;&lt;/id&gt;</span>
</span><span class='line'>      <span class="nt">&lt;name&gt;&lt;/name&gt;</span>
</span><span class='line'>      <span class="nt">&lt;sex&gt;&lt;/sex&gt;</span>
</span><span class='line'>      <span class="nt">&lt;age&gt;&lt;/age&gt;</span>
</span><span class='line'>      <span class="nt">&lt;birth&gt;&lt;/birth&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/student&gt;</span>
</span><span class='line'>  <span class="nt">&lt;student&gt;</span>
</span><span class='line'>      <span class="nt">&lt;id&gt;&lt;/id&gt;</span>
</span><span class='line'>      <span class="nt">&lt;name&gt;&lt;/name&gt;</span>
</span><span class='line'>      <span class="nt">&lt;sex&gt;&lt;/sex&gt;</span>
</span><span class='line'>      <span class="nt">&lt;age&gt;&lt;/age&gt;</span>
</span><span class='line'>      <span class="nt">&lt;birth&gt;&lt;/birth&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/student&gt;</span>
</span><span class='line'><span class="nt">&lt;/data&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>这里的规则与上面类似，也是重复两段<code>student</code>，这个是必须的，原理也同上面类似。</p>

<p>如果使用SchemaXML，那么规则应该这样</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;xs:schema</span> <span class="na">xmlns:xs=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema&quot;</span> <span class="na">elementFormDefault=</span><span class="s">&quot;qualified&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;xs:element</span> <span class="na">name=</span><span class="s">&quot;data&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;xs:complexType&gt;</span>
</span><span class='line'>            <span class="nt">&lt;xs:sequence&gt;</span>
</span><span class='line'>                <span class="nt">&lt;xs:element</span> <span class="na">maxOccurs=</span><span class="s">&quot;unbounded&quot;</span> <span class="na">name=</span><span class="s">&quot;student&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;xs:complexType&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;xs:sequence&gt;</span>
</span><span class='line'>                            <span class="nt">&lt;xs:element</span> <span class="na">name=</span><span class="s">&quot;id&quot;</span> <span class="na">type=</span><span class="s">&quot;xs:integer&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>                            <span class="nt">&lt;xs:element</span> <span class="na">name=</span><span class="s">&quot;name&quot;</span> <span class="na">type=</span><span class="s">&quot;xs:string&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>                            <span class="nt">&lt;xs:element</span> <span class="na">name=</span><span class="s">&quot;sex&quot;</span> <span class="na">type=</span><span class="s">&quot;xs:integer&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>                            <span class="nt">&lt;xs:element</span> <span class="na">name=</span><span class="s">&quot;age&quot;</span> <span class="na">type=</span><span class="s">&quot;xs:integer&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>                            <span class="nt">&lt;xs:element</span> <span class="na">name=</span><span class="s">&quot;birth&quot;</span> <span class="na">type=</span><span class="s">&quot;xs:date&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>                        <span class="nt">&lt;/xs:sequence&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;/xs:complexType&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/xs:element&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/xs:sequence&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/xs:complexType&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/xs:element&gt;</span>
</span><span class='line'><span class="nt">&lt;/xs:schema&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>相应的Oxygen可视化模型大致如下图</p>

<p><img src="http://larryhou.github.com/images/export-xml-from-excel/fig06.png"></p>

<h2>注意事项</h2>

<ul>
<li>虽然XML、SchemaXML规则可以描述很复杂的XML内容，但是Excel只支持最多二级的XML配置导出</li>
<li>使用XML做规则时，一定不能只使用一条数据来描述，否则生成的结果只有Excel标题栏文本，而不是数据本身</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用charles远程调试iOS移动应用]]></title>
    <link href="http://larryhou.github.com/blog/2012/11/05/remote-debug-with-charles-proxy/"/>
    <updated>2012-11-05T16:38:00+08:00</updated>
    <id>http://larryhou.github.com/blog/2012/11/05/remote-debug-with-charles-proxy</id>
    <content type="html"><![CDATA[<p>做iOS移动应用很多开发者会喜欢抓网络发包、回包来联调服务端借口以及定位其他网络问题。如果在Windows系统可以使用fiddler来做iOS的远程代理，只要fiddler所在系统与iOS设备同时连上同一个局域网即可。但是在OSX系统上没有fiddler，相信做iOS开发用windows系统的不多，其实不要纠结：其实跨平台http抓包工具charles也可以做远程代理，也就是说iOS也可以通过charles来调试，charles调试的相关技术都可以对iOS适用。</p>

<p>那怎么才能实现charles做iOS的远程代理呢？先看charles官网的文档。</p>

<blockquote><p>USING CHARLES FROM AN IPHONE</p><p>To use Charles as your HTTP proxy on your iPhone you must manually configure the HTTP Proxy settings on your WiFi network in your iPhone&#8217;s Settings.</p><p>Go to the Settings app, tap Wi-Fi, find the network you are connected to and then tap the blue disclosure arrow to configure the network. Scroll down to the HTTP Proxy setting, tap Manual. Enter the IP address of your computer running Charles in the Server field, and the port Charles is running on in the Port field (usually 8888). Leave Authentication set to Off.</p><p>All of your web traffic from your iPhone will now be sent via Charles. You should see a prompt in Charles when you first make a connection from the iPhone, asking you to allow the traffic.</p><p>Remember to disable the HTTP Proxy in your Settings when you stop using Charles, otherwise you&#8217;ll get confusing network failures in your applications!</p><footer><strong>charlesproxy.com</strong> <cite><a href='http://www.charlesproxy.com/documentation/faqs/using-charles-from-an-iphone/'>Remote Debug iOS APP With Charles</a></cite></footer></blockquote>




<!--more-->


<p><img class="right" src="http://larryhou.github.com/images/remote-debug-with-charles-proxy/settings.png" width="430">
从这段文档可以知道只需要打开iOS的WiFi设置，滚屏到底部的代理设置部分，点击“手动”页签, 在“<strong>服务器</strong>”栏输入charles所在系统的网络IP地址，在&#8221;<strong>端口</strong>&#8220;栏输入“<strong>8888</strong>”，然后随便打开一个需要网络的APP，这个时候OSX系统上的charles会出现一个弹窗，这是一个授权远程代理的确认框，点击”<strong>allow</strong>”允许iOS连接本机的charles。</p>

<p><img class="left" src="http://larryhou.github.com/images/remote-debug-with-charles-proxy/allow.png"></p>

<p>经过这样设置后，所有iOS上的http请求都可以被charles抓到包，看到“<strong>sequence</strong>”视图疯狂滚屏，你也会有瞬间高潮了一样的感觉！</p>

<p><img src="http://larryhou.github.com/images/remote-debug-with-charles-proxy/package.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AppleScript：循环]]></title>
    <link href="http://larryhou.github.com/blog/2012/11/05/applescript-xun-huan/"/>
    <updated>2012-11-05T01:07:00+08:00</updated>
    <id>http://larryhou.github.com/blog/2012/11/05/applescript-xun-huan</id>
    <content type="html"><![CDATA[<p>AppleScript是一个比较接近自然语言脚本语言，习惯了传统编程的程序猿一时还真难以适应这种表达和思考方式，不过了解其中的规律后，你就会发现AppleScript其实是一种非常容易、非常生活化的编程语言。在这篇文章里面着重介绍循环控制指令。</p>

<!--more-->


<p>在Applescript里面实现循环效果就要使用<code>repeat</code>命令，结合不同的关键字又有不同的循环控制效果。尽管如此，在任何时候想结束循环的地方使用<code>exit</code>命令则可随时退出。</p>

<h3>repeat</h3>

<p>该命令执行无限循环，直至执行遇到<code>exit [repeat]</code>命令</p>

<figure class='code'><figcaption><span>repeat  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='applescript'><span class='line'><span class="k">set</span> <span class="nv">var</span> <span class="k">to</span> <span class="mi">0</span>
</span><span class='line'><span class="k">repeat</span>
</span><span class='line'>  <span class="k">if</span> <span class="nv">var</span> <span class="o">≥</span> <span class="mi">100</span> <span class="k">then</span>
</span><span class='line'>      <span class="k">exit</span> <span class="k">repeat</span>
</span><span class='line'>  <span class="k">end</span> <span class="k">if</span>
</span><span class='line'><span class="k">end</span> <span class="k">repeat</span>
</span></code></pre></td></tr></table></div></figure>


<h3>repeat <em>n</em> [times]</h3>

<p>该命令执行<strong><em>n</em></strong>次循环，除非遇到<code>exit [repeat]</code>命令</p>

<figure class='code'><figcaption><span>repeat &#8230; times  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='applescript'><span class='line'><span class="k">set</span> <span class="nv">var</span> <span class="k">to</span> <span class="mi">0</span>
</span><span class='line'><span class="k">repeat</span> <span class="mi">5</span> <span class="k">times</span>
</span><span class='line'>  <span class="k">set</span> <span class="nv">var</span> <span class="k">to</span> <span class="nv">var</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>  <span class="nb">log</span> <span class="nv">var</span>
</span><span class='line'><span class="k">end</span> <span class="k">repeat</span>
</span></code></pre></td></tr></table></div></figure>


<h3>repeat until <em>condition</em></h3>

<p>该命令执行循环直至<strong><em>until</em></strong>条件成立，除非遇到<code>exit [repeat]</code>命令</p>

<figure class='code'><figcaption><span>repeat until &#8230;  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='applescript'><span class='line'><span class="k">set</span> <span class="nv">var</span> <span class="k">to</span> <span class="mi">0</span>
</span><span class='line'><span class="k">repeat</span> <span class="k">until</span> <span class="nv">var</span> <span class="o">≥</span> <span class="mi">100</span>
</span><span class='line'>  <span class="k">set</span> <span class="nv">var</span> <span class="k">to</span> <span class="nv">var</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>  <span class="nb">log</span> <span class="nv">var</span>
</span><span class='line'><span class="k">end</span> <span class="k">repeat</span>
</span></code></pre></td></tr></table></div></figure>


<h3>repeat while <em>condition</em></h3>

<p>该命令执行循环只要<strong><em>while</em></strong>条件成立，除非遇到<code>exit [repeat]</code>命令</p>

<figure class='code'><figcaption><span>repeat while &#8230;  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='applescript'><span class='line'><span class="k">set</span> <span class="nv">var</span> <span class="k">to</span> <span class="mi">0</span>
</span><span class='line'><span class="k">repeat</span> <span class="k">while</span> <span class="nv">var</span> <span class="o">&lt;</span> <span class="mi">100</span>
</span><span class='line'>  <span class="k">set</span> <span class="nv">var</span> <span class="k">to</span> <span class="nv">var</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class='line'>  <span class="nb">log</span> <span class="nv">var</span>
</span><span class='line'><span class="k">end</span> <span class="k">repeat</span>
</span></code></pre></td></tr></table></div></figure>


<h3>repeat with <em>var</em> from <em>start</em> to <em>end</em> [by <em>step</em>]</h3>

<p>该命令执行循环只要<strong><em>while</em></strong>条件成立，除非遇到<code>exit [repeat]</code>命令</p>

<figure class='code'><figcaption><span>repeat with var from &#8230; to &#8230; by &#8230;  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='applescript'><span class='line'><span class="k">repeat</span> <span class="nv">with</span> <span class="nv">var</span> <span class="k">from</span> <span class="mi">0</span> <span class="k">to</span> <span class="mi">100</span> <span class="k">by</span> <span class="mi">5</span>
</span><span class='line'>  <span class="nb">log</span> <span class="nv">var</span>
</span><span class='line'><span class="k">end</span> <span class="k">repeat</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果<strong><em>by</em></strong>参数没有，则默认<code>var</code>每个循环+1</p>

<figure class='code'><figcaption><span>repeat with var from &#8230; to &#8230;  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='applescript'><span class='line'><span class="k">repeat</span> <span class="nv">with</span> <span class="nv">var</span> <span class="k">from</span> <span class="mi">0</span> <span class="k">to</span> <span class="mi">100</span>
</span><span class='line'>  <span class="nb">log</span> <span class="nv">var</span>
</span><span class='line'><span class="k">end</span> <span class="k">repeat</span>
</span></code></pre></td></tr></table></div></figure>


<h3>repeat with <em>var</em> in <em>list</em></h3>

<p>该命令可以实现列表遍历的效果，除非遇到<code>exit [repeat]</code>命令</p>

<figure class='code'><figcaption><span>repeat with var in &#8230;  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='applescript'><span class='line'><span class="k">set</span> <span class="err">_list</span> <span class="k">to</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">}</span>
</span><span class='line'><span class="k">repeat</span> <span class="nv">with</span> <span class="nv">var</span> <span class="k">in</span> <span class="err">_list</span>
</span><span class='line'>  <span class="nb">log</span> <span class="nv">var</span>
</span><span class='line'><span class="k">end</span> <span class="k">repeat</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install git with macport]]></title>
    <link href="http://larryhou.github.com/blog/2012/10/26/install-git-with-macport/"/>
    <updated>2012-10-26T16:27:00+08:00</updated>
    <id>http://larryhou.github.com/blog/2012/10/26/install-git-with-macport</id>
    <content type="html"><![CDATA[<p>不知道怎么回事儿，我的git有时候会抽风，现在又抽风了：我的<code>git-svn</code>不见了，这里是用<code>macport</code>安装的脚本，以备下次重装又要google半天&#8230;</p>

<figure class='code'><figcaption><span>install git with svn</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo port install git-core +svn +doc +bash_completion +gitweb</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[BitmapData.draw() 和 DisplayObject.blendMode]]></title>
    <link href="http://larryhou.github.com/blog/2012/10/25/BitmapData.draw-and-DisplayObject.blendMode/"/>
    <updated>2012-10-25T00:00:00+08:00</updated>
    <id>http://larryhou.github.com/blog/2012/10/25/BitmapData.draw-and-DisplayObject.blendMode</id>
    <content type="html"><![CDATA[<p><code>BitmapData.draw()</code>如果遇到<code>DisplayObject.blendMode</code>有时候效果会异常，这里有个陷阱&#8230;oops</p>

<figure class='code'><figcaption><span>simple exmaple  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='actionscript3'><span class='line'><span class="kd">var</span> <span class="n">container</span><span class="p">:</span><span class="kt">Sprite</span> <span class="o">=</span> <span class="k">new</span> <span class="o">[</span><span class="n">some</span> <span class="n">DisplayObjectContainer</span> <span class="kd">class</span><span class="o">]();</span>
</span><span class='line'><span class="kd">var</span> <span class="n">childA</span><span class="p">:</span><span class="kt">Sprite</span> <span class="o">=</span> <span class="k">new</span> <span class="o">[</span><span class="n">some</span> <span class="n">DisplayObject</span> <span class="kd">class</span><span class="o">]();</span>
</span><span class='line'><span class="kd">var</span> <span class="n">childB</span><span class="p">:</span><span class="kt">Sprite</span> <span class="o">=</span> <span class="k">new</span> <span class="o">[</span><span class="n">some</span> <span class="n">DisplayObject</span> <span class="kd">class</span><span class="o">]();</span>
</span><span class='line'>
</span><span class='line'><span class="n">childA</span><span class="o">.</span><span class="na">blendMode</span> <span class="o">=</span> <span class="n">BlendMode</span><span class="o">.</span><span class="na">ADD</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">container</span><span class="o">.</span><span class="na">addChild</span><span class="o">(</span><span class="n">childA</span><span class="o">);</span>
</span><span class='line'><span class="n">container</span><span class="o">.</span><span class="na">addChild</span><span class="o">(</span><span class="n">childB</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="n">data</span><span class="p">:</span><span class="kt">BitmapData</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">BitmapData</span><span class="o">(</span><span class="n">container</span><span class="o">.</span><span class="na">width</span><span class="o">,</span> <span class="n">container</span><span class="o">.</span><span class="na">height</span><span class="o">,</span> <span class="kc">true</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'><span class="n">data</span><span class="o">.</span><span class="na">draw</span><span class="o">(</span><span class="n">container</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>如上面这段代码，看起来没有什么问题，但是如果把<code>data</code>通过<code>Bitmap</code>显示出来，就会发现效果有些诡异，这是因为<code>BitmapData</code>在<code>draw</code>的时候，会自动忽略<code>childA.blendMode</code>属性，除非把<code>childA</code>的父级容器设置为<code>container.blendMode = BlendMode.LAYER</code>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ActionScript Syntax Highlight in Octopress]]></title>
    <link href="http://larryhou.github.com/blog/2012/10/22/ActionScript-Syntax-Highlight/"/>
    <updated>2012-10-22T00:00:00+08:00</updated>
    <id>http://larryhou.github.com/blog/2012/10/22/ActionScript-Syntax-Highlight</id>
    <content type="html"><![CDATA[<p>Here is a <code>bezier</code> utils method in ActionScript.</p>

<!--more-->




<figure class='code'><figcaption><span> (bezier.as)</span> <a href='http://larryhou.github.com/downloads/code/bezier.as'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='actionscript3'><span class='line'><span class="k">package</span> <span class="nn">ifrog.math</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>  <span class="k">import</span> <span class="nn">flash.geom.Point</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * 贝塞尔工具</span>
</span><span class='line'><span class="cm">  * @author Larry H.</span>
</span><span class='line'><span class="cm">  * @createTime 2012/8/21 16:24</span>
</span><span class='line'><span class="cm">  * </span>
</span><span class='line'><span class="cm">  * 绘制贝赛尔曲线点</span>
</span><span class='line'><span class="cm">  * @param   list    控制点</span>
</span><span class='line'><span class="cm">  * @param   ratio   贝赛尔曲线比例</span>
</span><span class='line'><span class="cm">  * @return  返回ratio比例对应贝赛尔曲线上的点坐标</span>
</span><span class='line'><span class="cm">  * list.length代表贝赛尔曲线的阶数，一般二阶即可满足需要，二阶需要三个点</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">function </span><span class="nf">bezier</span><span class="o">(</span><span class="n">list</span><span class="o">:</span><span class="kt">Array</span><span class="err">/*list.length</span> <span class="err">&gt;=</span> <span class="err">2*/,</span> <span class="n">ratio</span><span class="o">:</span><span class="kt">Number</span><span class="err">/*0</span> <span class="err">=&lt;</span> <span class="err">ratio</span> <span class="err">&lt;=</span> <span class="err">1*/</span><span class="o">):</span><span class="kt">Point</span>
</span><span class='line'>  <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(!</span><span class="n">list</span><span class="o">)</span> <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">list</span><span class="o">.</span><span class="na">length</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="o">)</span>
</span><span class='line'>      <span class="o">{</span>
</span><span class='line'>          <span class="kd">var</span> <span class="n">pos</span><span class="p">:</span><span class="kt">Point</span><span class="o">;</span>
</span><span class='line'>          <span class="kd">var</span> <span class="n">length</span><span class="p">:</span><span class="kt">int</span> <span class="o">=</span> <span class="n">list</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
</span><span class='line'>          <span class="k">for</span> <span class="o">(</span><span class="kd">var</span> <span class="n">i</span><span class="p">:</span><span class="kt">int</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">length</span> <span class="o">-</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
</span><span class='line'>          <span class="o">{</span>
</span><span class='line'>              <span class="n">pos</span> <span class="o">=</span> <span class="n">list</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
</span><span class='line'>              
</span><span class='line'>              <span class="n">list</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">Point</span><span class="o">();</span>
</span><span class='line'>              <span class="n">list</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="n">x</span> <span class="o">=</span> <span class="o">(</span><span class="mi">1</span> <span class="o">-</span> <span class="n">ratio</span><span class="o">)</span> <span class="o">*</span> <span class="n">pos</span><span class="o">.</span><span class="na">x</span> <span class="o">+</span> <span class="n">ratio</span> <span class="o">*</span> <span class="n">list</span><span class="o">[</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="o">].</span><span class="n">x</span><span class="o">;</span>
</span><span class='line'>              <span class="n">list</span><span class="o">[</span><span class="n">i</span><span class="o">].</span><span class="n">y</span> <span class="o">=</span> <span class="o">(</span><span class="mi">1</span> <span class="o">-</span> <span class="n">ratio</span><span class="o">)</span> <span class="o">*</span> <span class="n">pos</span><span class="o">.</span><span class="na">y</span> <span class="o">+</span> <span class="n">ratio</span> <span class="o">*</span> <span class="n">list</span><span class="o">[</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="o">].</span><span class="n">y</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          
</span><span class='line'>          <span class="n">list</span><span class="o">.</span><span class="na">pop</span><span class="o">();</span>
</span><span class='line'>          <span class="k">return</span> <span class="k">arguments</span><span class="o">.</span><span class="na">callee</span><span class="o">.</span><span class="na">apply</span><span class="o">(</span><span class="kc">null</span><span class="o">,</span> <span class="k">arguments</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">return</span> <span class="n">list</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
